package dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.support.rowset.SqlRowSet;
import org.springframework.stereotype.Component;

public class StudentImplement implements StudentDao {
	private DataSource dataSource;
	private JdbcTemplate jdbcTemplate = new JdbcTemplate();
	public StudentImplement() {/*default constructor*/}

	@Override
	public void insert(String name, String grade) throws Exception {//insert a new Student into the DB, given his/her name and grade
																	//Id will be auto-generated by the system
		// set date as current time
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		Date date = new Date();
		String updateTime = dateFormat.format(date);
		
		// set studentId from last_insert_id, and add zeros to make it 16-digit
		String sql = "select LAST_INSERT_ID() as 'id' from namelist";
		SqlRowSet rs = this.jdbcTemplate.queryForRowSet(sql);
		rs.next();
		int id = Integer.parseInt(rs.getString("id")) + 1;
		String idString = Integer.toString(id);
		String studentId="";
		
		//make studentId 16-digit so that all students have the same ID format
		for (int i = 0; i < 16 - idString.length(); i++) {
			studentId += "0";
			idString = Integer.toString(id);
		}
		studentId += idString;
		
		//insert the Student into DB 
		sql = "insert into namelist(StudentId,Name,UpdateTime,Grade) values(?,?,?,?)";
		jdbcTemplate.update(sql, new Object[] { studentId, name, updateTime, grade });
	}

	@Override
	public Student[] fetchId(String key) throws NumberFormatException, SQLException {//returns a set of Students whose StudentIds contain key
		String sql = "select * from namelist where studentid like '%"+key+"%'";
		SqlRowSet rs = this.jdbcTemplate.queryForRowSet(sql);
		return this.toArray(rs);
	}
	
	public Student[] toArray(SqlRowSet rs) throws NumberFormatException, SQLException{//cast SqlRowSet into array
		//first cast the SqlRowSet into ArrayList
		ArrayList<Student> l=new ArrayList<Student>();
		int size=0;
		while(rs.next()){
			Student s=new Student(rs.getString("Name"),rs.getString("StudentId"),rs.getString("UpdateTime"),Integer.parseInt(rs.getString("Grade")));
			l.add(s);
			size++;
		}
		
		//then cast the ArrayList into an array
		Student[] students=new Student[size];
		for(int i=0;i<size;i++){
			students[i]=l.get(i);
		}
		
		return students;
	}

	public String printJson(){
		String str="";
		
		return str;
	}
	
	// getters & Setters; they are self-evident 
	public DataSource getDataSource() {
		return dataSource;
	}
	public void setDataSource(DataSource dataSource) {
		this.dataSource = dataSource;
		this.jdbcTemplate = new JdbcTemplate(dataSource);
	}
	public JdbcTemplate getJdbcTemplate() {
		return jdbcTemplate;
	}
	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}
}
